-- uloha 1-3
SELECT * FROM authors
WHERE username = 'mfa_russia';

SET max_parallel_workers_per_gather = 2;

CREATE INDEX index_username ON authors (
username
);

-- uloha 4
SELECT * FROM authors
WHERE followers_count >= 100 AND followers_count <= 200

-- uloha 5
CREATE INDEX index_followers_count ON authors (
followers_count
);

EXPLAIN ANALYZE SELECT * FROM authors
WHERE followers_count >= 100 AND followers_count <= 200

EXPLAIN ANALYZE SELECT * FROM authors
WHERE followers_count >= 100 AND followers_count <= 120

DROP INDEX index_username;
DROP INDEX index_followers_count;
-- uloha 6
INSERT INTO authors("name", username, description, followers_count, following_count, tweet_count, listed_count)
VALUES ('a', 'a', 'a', 1, 1, 1, 1);

CREATE INDEX index_followers_count ON authors (
followers_count
);

CREATE INDEX index_name ON authors (
"name"
);

EXPLAIN ANALYZE CREATE INDEX index_description ON authors (
description
);

-- uloha 7
CREATE INDEX index_retweet_count ON conversations (
retweet_count
);

CREATE INDEX index_content ON conversations (
"content"
);

select pg_size_pretty(pg_total_relation_size('index_content'));

select pg_size_pretty(pg_total_relation_size('index_retweet_count'));

-- uloha 8
create extension pageinspect;
select * from bt_metap('index_name');
select * from bt_page_stats('index_name', 1000);
select * from bt_page_items('index_name', 1) limit 1000;




-- uloha 9
SELECT * from conversations
where content like '%GATES%'

CREATE INDEX tbl_col_text_pattern_ops_idx ON conversations("content" text_pattern_ops); 

-- uloha 10 
CREATE INDEX tbl_col_text_pattern_ops_idx ON conversations("content" text_pattern_ops);

SELECT * FROM conversations
Where content like 'There are no excuses%'
and possibly_sensitive = TRUE;


-- uloha 11 
SELECT * FROM conversations
Where reverse(content) like reverse('%https://t.co/pkFwLXZlEm');

CREATE INDEX ON conversations (reverse(content) text_pattern_ops);

-- uloha 12
EXPLAIN ANALYZE SELECT * from conversations
where reply_count > 150 and 
retweet_count >= 5000
ORDER BY quote_count

CREATE INDEX index_reply_count ON conversations (
reply_count
);

CREATE INDEX index_retweet_count ON conversations (
retweet_count
);

CREATE INDEX index_quote_count ON conversations (
quote_count
);

-- uloha 13
SELECT * from conversations
where reply_count > 150 and 
retweet_count >= 5000
ORDER BY quote_count;

CREATE INDEX index_composite on conversations(retweet_count, reply_count)
-- uloha 14
create extension pg_trgm; 

CREATE INDEX tbl_col_gin_trgm_idx  ON conversations USING gin  (content gin_trgm_ops);

CREATE INDEX tbl_col_gist_trgm_idx ON conversations USING gist (content gist_trgm_ops);

CREATE INDEX tbl_col_gin_trgm_idx  ON links USING gin  (url gin_trgm_ops);

CREATE INDEX tbl_col_gist_trgm_idx ON links USING gist (url gist_trgm_ops);

CREATE INDEX index_possibly_sensitive ON conversations (
possibly_sensitive
);

SELECT * FROM conversations
where content like '%Putin%'
and content like '%New World Order%'
and possibly_sensitive = TRUE;


update pg_index set indisvalid = false where indexrelid = 'tbl_col_gin_trgm_idx'::regclass;

update pg_index set indisvalid = true where indexrelid = 'tbl_col_gist_trgm_idx'::regclass;



-- uloha 15
CREATE INDEX tbl_col_gin_trgm_idx_links  ON links USING gin  (url gin_trgm_ops);

CREATE INDEX tbl_col_gist_trgm_idx_links ON links USING gist (url gist_trgm_ops);

SELECT * FROM links
where url like '%darujme.sk%';


-- uloha 16
CREATE INDEX index_authors_username_description on authors USING GIN (to_tsvector('english', username || ' ' || description));

CREATE INDEX index_conversations on conversations USING GIN (to_tsvector('english', content));

CREATE INDEX index_author_id ON conversations (
author_id
);

select  a.username, a.description, t.content, t.retweet_count from conversations t inner join authors a
on t.author_id = a.id
and to_tsvector('english', a.username || ' ' || a.description) @@ to_tsquery('Володимир & Президент')
Union
select a.username, a.description, t.content, t.retweet_count from authors a inner join conversations t
on a.id = t.author_id
and to_tsvector('english', t.content) @@ to_tsquery('Володимир & Президент')
ORDER BY retweet_count desc;
