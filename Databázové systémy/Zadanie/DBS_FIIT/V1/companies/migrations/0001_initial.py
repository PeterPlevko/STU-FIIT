# Generated by Django 3.1.7 on 2021-03-28 09:11

from django.db import migrations


class Migration(migrations.Migration):

    initial = True
    dependencies = [
    ]

    operations = [
        migrations.RunSQL("""
        ALTER TABLE ov.or_podanie_issues DROP COLUMN IF EXISTS company_id;
                                ALTER TABLE ov.likvidator_issues DROP COLUMN IF EXISTS company_id;
                                ALTER TABLE ov.konkurz_vyrovnanie_issues DROP COLUMN IF EXISTS company_id;
                                ALTER TABLE ov.znizenie_imania_issues DROP COLUMN IF EXISTS company_id;
                                ALTER TABLE ov.konkurz_restrukturalizacia_actors DROP COLUMN IF EXISTS company_id;
                                DROP TABLE IF EXISTS ov.companies;
        
                                CREATE TABLE ov.companies(
                                        cin BIGINT PRIMARY KEY,
                                        name VARCHAR,
                                        br_section VARCHAR,
                                        address_line VARCHAR,
                                        last_update TIMESTAMP,
                                        created_at TIMESTAMP,
                                        updated_at TIMESTAMP);
                                        
                                INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)
                                SELECT cin , corporate_body_name, br_section,
                                    CASE WHEN address_line IS NOT NULL THEN address_line
                                         WHEN CONCAT(street, ', ', postal_code, city) NOT LIKE ', ' THEN CONCAT(street, ', ', postal_code, ' ', city)
                                            END AS address_line,
                                        updated_at, NOW(), NOW()
                                FROM (
                                    SELECT *, RANK() OVER (PARTITION BY cin ORDER BY updated_at DESC) AS ranking
                                    FROM ov.or_podanie_issues
                                    WHERE cin IS NOT NULL) as tbl
                                WHERE tbl.ranking = 1
                                on conflict do nothing ;
                                
                                INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)
                                SELECT cin , corporate_body_name, br_section,
                                       CASE WHEN CONCAT(street, ', ', postal_code, city) NOT LIKE ', ' THEN CONCAT(street, ', ', postal_code, ' ', city)
                                           END AS address_line,
                                        updated_at, NOW(), NOW()
                                FROM (
                                    SELECT *, RANK() OVER (PARTITION BY cin ORDER BY updated_at DESC) AS ranking
                                    FROM ov.likvidator_issues
                                    WHERE cin IS NOT NULL) as tbl
                                WHERE tbl.ranking = 1
                                on conflict do nothing;
        
                                INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)
                                SELECT cin , corporate_body_name, '',
                                       CASE WHEN CONCAT(street, ', ', postal_code, city) NOT LIKE ', ' THEN CONCAT(street, ', ', postal_code, ' ', city)
                                           END AS address_line,
                                       updated_at, NOW(), NOW()
                                FROM (
                                    SELECT *, RANK() OVER (PARTITION BY cin ORDER BY updated_at DESC) AS ranking
                                    FROM ov.konkurz_vyrovnanie_issues
                                    WHERE cin IS NOT NULL) as tbl
                                WHERE tbl.ranking = 1
                                on conflict do nothing;
        
                                INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)
                                SELECT cin , corporate_body_name, br_section,
                                       CASE WHEN CONCAT(street, ', ', postal_code, city) NOT LIKE ', ' THEN CONCAT(street, ', ', postal_code, ' ', city)
                                           END AS address_line,
                                       updated_at, NOW(), NOW()
                                FROM (
                                    SELECT *, RANK() OVER (PARTITION BY cin ORDER BY updated_at DESC) AS ranking
                                    FROM ov.znizenie_imania_issues
                                    WHERE cin IS NOT NULL) as tbl
                                WHERE tbl.ranking = 1
                                on conflict do nothing;
        
                                INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)
                                SELECT cin , corporate_body_name, '',
                                       CASE WHEN CONCAT(street, ', ', postal_code, city) NOT LIKE ', ' THEN CONCAT(street, ', ', postal_code, ' ', city)
                                           END AS address_line,
                                       updated_at, NOW(), NOW()
                                FROM (
                                    SELECT *, RANK() OVER (PARTITION BY cin ORDER BY updated_at DESC) AS ranking
                                    FROM ov.konkurz_restrukturalizacia_actors
                                    WHERE cin IS NOT NULL) as tbl
                                WHERE tbl.ranking = 1
                                on conflict do nothing;
                                
                                ALTER TABLE ov.or_podanie_issues ADD COLUMN IF NOT EXISTS company_id BIGINT REFERENCES ov.companies(cin);
                                UPDATE ov.or_podanie_issues
                                SET company_id = cin
                                WHERE cin IS NOT NULL;
                                
                                ALTER TABLE ov.likvidator_issues ADD COLUMN IF NOT EXISTS company_id BIGINT REFERENCES ov.companies(cin);
                                UPDATE ov.likvidator_issues
                                SET company_id = cin
                                WHERE cin IS NOT NULL;
                                
                                ALTER TABLE ov.konkurz_vyrovnanie_issues ADD COLUMN IF NOT EXISTS company_id BIGINT REFERENCES ov.companies(cin);
                                UPDATE ov.konkurz_vyrovnanie_issues
                                SET company_id = cin
                                WHERE cin IS NOT NULL;
                                
                                ALTER TABLE ov.znizenie_imania_issues ADD COLUMN IF NOT EXISTS company_id BIGINT REFERENCES ov.companies(cin);
                                UPDATE ov.znizenie_imania_issues
                                SET company_id = cin
                                WHERE cin IS NOT NULL;
                                
                                ALTER TABLE ov.konkurz_restrukturalizacia_actors ADD COLUMN IF NOT EXISTS company_id BIGINT REFERENCES ov.companies(cin);
                                UPDATE ov.konkurz_restrukturalizacia_actors
                                SET company_id = cin
                                WHERE cin IS NOT NULL;
        """)
    ]
