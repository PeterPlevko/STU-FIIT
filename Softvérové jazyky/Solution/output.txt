PS H:\Môj disk\5 SJ\5 SJ Zadania\7.5 - Projekt> cd .\Solution\
PS H:\Môj disk\5 SJ\5 SJ Zadania\7.5 - Projekt\Solution> python .\main.py -f .\input.txt
Reading from file .\input.txt
**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv/path/to/file

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: f
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: f
Current token: f

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: v
Current token: v

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 3
Current token: 3

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: v
Current token: v

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 3
Current token: 3

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: j
Current token: j

Step: 60
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 4
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 4
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 4
Applying rule 38: ['DIGIT']

Step: 63
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 4
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 64
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '4']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 4
Current token: 4

Step: 65
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: z
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: z
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: z
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: z
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'z']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: z
Current token: z

Step: 70
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 75
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 76
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 77
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 78
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 79
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: k
Current token: k

Step: 80
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 81
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 82
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 83
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 84
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 85
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 86
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 86: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 87
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: .
Current token: .

Step: 88
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: j
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 89
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 90
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 91
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 92
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: j
Current token: j

Step: 93
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 94
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 95
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 96
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 97
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: v
Current token: v

Step: 98
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 99
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 99: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 100
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 100: SUFPORT
Applying rule 19: ['ε']

Step: 101
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 101: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 102
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: /
Current token: /

Step: 103
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 104
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 105
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 106
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 107
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: p
Current token: p

Step: 108
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 109
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 110
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 111
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: a
Current token: a

Step: 112
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 113
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 116
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 117
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 118
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 119
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: h
Current token: h

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 121: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: /
Current token: /

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: t
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: o
Current token: o

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 133: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: /
Current token: /

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 138
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 139
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: f
Current token: f

Step: 140
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 141
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 142
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 143
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: i
Current token: i

Step: 144
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 145
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 146
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 147
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: l
Current token: l

Step: 148
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 149
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 150
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 151
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 152
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: []
Current state: SEGMENT
Current token: $
Applying rule 33: ['ε']

Step: 153
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 153: SLASHPATH
Applying rule 26: ['ε']

Step: 154
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 154: SUFSEARCH
Applying rule 10: ['ε']

Step: 155
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 155: -START-

Success - valid URL

Accepted tokens:
http://s0ftv3r0v3j4zyky.jv/path/to/file
**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv/path/to/file?search1keyword

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 0
Current token: 0

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: f
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: f
Current token: f

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), 
('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), 
('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), 
('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), 
('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), 
('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 3
Current token: 3

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')] 
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')] 
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')] 
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')] 
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')] 
Current state: r
Current token: r

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 0
Current token: 0

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 3
Current token: 3

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: j
Current token: j

Step: 60
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 4
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 4
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 4
Applying rule 38: ['DIGIT']

Step: 63
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 4
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 64
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '4']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 4
Current token: 4

Step: 65
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: z
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: z
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: z
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: z
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'z']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: z
Current token: z

Step: 70
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 75
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 76
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 77
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 78
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 79
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: k
Current token: k

Step: 80
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 81
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 82
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 83
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 84
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 85
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 86
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 86: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 87
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: .
Current token: .

Step: 88
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTNAME
Current token: j
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 89
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 90
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 91
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 92
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: j
Current token: j

Step: 93
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 94
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 95
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 96
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 97
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 98
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 99
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 99: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 100
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 100: SUFPORT
Applying rule 19: ['ε']

Step: 101
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 101: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 102
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 103
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 104
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 105
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 106
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 107
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: p
Current token: p

Step: 108
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 109
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 110
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 111
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: a
Current token: a

Step: 112
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 113
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 116
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 117
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 118
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 119
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: h
Current token: h

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 121: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: t
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: o
Current token: o

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 133: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 138
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 139
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: f
Current token: f

Step: 140
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 141
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 142
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 143
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: i
Current token: i

Step: 144
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 145
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 146
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 147
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: l
Current token: l

Step: 148
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 149
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 150
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 151
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: e
Current token: e

Step: 152
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: ?
Applying rule 33: ['ε']

Step: 153
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 153: SLASHPATH
Applying rule 26: ['ε']

Step: 154
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 154: SUFSEARCH
Applying rule 9: ['?', 'SEARCH']

Step: 155
Stack: ['-START-', 'SEARCH', '?']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ?
Current token: ?

Step: 156
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEARCH
Current token: s
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 157
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 158
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 159
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 160
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: s
Current token: s

Step: 161
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 162
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 163
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 164
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 165
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: e
Current token: e

Step: 166
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: a
Applying rule 35: ['XALPHAS']

Step: 167
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: a
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 168
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 169
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 170
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: a
Current token: a

Step: 171
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 172
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 173
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 174
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 175
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: r
Current token: r

Step: 176
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 177
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 178
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 179
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 180
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: c
Current token: c

Step: 181
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 182
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 183
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 184
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 185
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: h
Current token: h

Step: 186
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 1
Applying rule 35: ['XALPHAS']

Step: 187
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 1
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 188
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 1
Applying rule 38: ['DIGIT']

Step: 189
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 190
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 1
Current token: 1

Step: 191
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 192
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 193
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 194
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 195
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: k
Current token: k

Step: 196
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 197
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 198
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 199
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 200
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: e
Current token: e

Step: 201
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 202
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 203
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 204
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 205
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 206
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: w
Applying rule 35: ['XALPHAS']

Step: 207
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: w
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 208
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: w
Applying rule 37: ['ALPHA']

Step: 209
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: w
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 210
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'w']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: w
Current token: w

Step: 211
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 212
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 213
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 214
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 215
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: o
Current token: o

Step: 216
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 217
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 218
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 219
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 220
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: r
Current token: r

Step: 221
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 222
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 223
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 224
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 225
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: d
Current token: d

Step: 226
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 227
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 227: PLUSSEARCH
Applying rule 29: ['ε']

Step: 228
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 228: -START-

Success - valid URL

Accepted tokens:
http://s0ftv3r0v3j4zyky.jv/path/to/file?search1keyword
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: ftp://cyprich@smrecek.sj/

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 
'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: URL
Current token: ftp://
Applying rule 2: ['FTPADDRESS']

Step: 2
Stack: ['-START-', 'FTPADDRESS']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 
'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: FTPADDRESS
Current token: ftp://
Applying rule 11: ['ftp://', 'LOGIN', '/', 'PATH']

Step: 3
Stack: ['-START-', 'PATH', '/', 'LOGIN', 'ftp://']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 
'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ftp://
Current token: ftp://

Step: 4
Stack: ['-START-', 'PATH', '/', 'LOGIN']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: LOGIN
Current token: c
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: USER
Current token: c
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: c
Current token: c

Step: 10
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: y
Current token: y

Step: 15
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: p
Current token: p

Step: 20
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: r
Current token: r

Step: 25
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: i
Current token: i

Step: 30
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: c
Current token: c

Step: 35
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: h
Current token: h

Step: 40
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 15: ['@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: @
Current token: @

Step: 43
Stack: ['-START-', 'PATH', '/', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 44
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 45
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 46
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 47
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 48
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: s
Current token: s

Step: 49
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 50
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 51
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 52
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 53
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: m
Current token: m

Step: 54
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 55
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 56
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 57
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 58
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: r
Current token: r

Step: 59
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]    
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 60
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]    
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 61
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]    
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 62
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]    
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 63
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]    
Current state: e
Current token: e

Step: 64
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 65
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 66
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 67
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 68
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: c
Current token: c

Step: 69
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 70
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 71
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 72
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 73
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: e
Current token: e

Step: 74
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 75
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 76
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 77
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 78
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: k
Current token: k

Step: 79
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 80
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 80: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 81
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: .
Current token: .

Step: 82
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 83
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 84
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 85
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 86
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: s
Current token: s

Step: 87
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 88
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 89
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 90
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 91
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/')]
Current state: j
Current token: j

Step: 92
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 93
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 93: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 94
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 94: SUFPORT
Applying rule 19: ['ε']

Step: 95
Stack: ['-START-', 'PATH', '/', 'ε']
Tokens: [('-SYMBOL-', '/')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 95: /

Step: 96
Stack: ['-START-', 'PATH']
Tokens: []
Current state: PATH
Current token: $
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 97
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: []
Current state: SEGMENT
Current token: $
Applying rule 33: ['ε']

Step: 98
Stack: ['-START-', 'SLASHPATH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 98: SLASHPATH
Applying rule 26: ['ε']

Step: 99
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 99: -START-

Success - valid URL

Accepted tokens:
ftp://cyprich@smrecek.sj/
**************************************************
Input URL: ftp://student:cyprich@smrecek.sj/directory/file

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 
'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), 
('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: URL
Current token: ftp://
Applying rule 2: ['FTPADDRESS']

Step: 2
Stack: ['-START-', 'FTPADDRESS']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 
'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), 
('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: FTPADDRESS
Current token: ftp://
Applying rule 11: ['ftp://', 'LOGIN', '/', 'PATH']

Step: 3
Stack: ['-START-', 'PATH', '/', 'LOGIN', 'ftp://']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 
'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), 
('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ftp://
Current token: ftp://

Step: 4
Stack: ['-START-', 'PATH', '/', 'LOGIN']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: LOGIN
Current token: s
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: USER
Current token: s
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 15
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: u
Current token: u

Step: 20
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: d
Current token: d

Step: 25
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 30
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: n
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: n
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: n
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: n
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'n']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: n
Current token: n

Step: 35
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 40
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'PATH', '/', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 16: [':', 'PASSWORD', '@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'PASSWORD', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: :
Current token: :

Step: 43
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'PASSWORD']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PASSWORD
Current token: c
Applying rule 31: ['XALPHAS']

Step: 44
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: c
Current token: c

Step: 48
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 53
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 54
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 55
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 56
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 57
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: p
Current token: p

Step: 58
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 59
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 60
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 63
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 64
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 65
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 66
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 67
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: i
Current token: i

Step: 68
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 69
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 70
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 71
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 72
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: c
Current token: c

Step: 73
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 74
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 75
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 76
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 77
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: h
Current token: h

Step: 78
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 79
Stack: ['-START-', 'PATH', '/', 'HOSTPORT', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 79: @

Step: 80
Stack: ['-START-', 'PATH', '/', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 81
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 82
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 83
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 84
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 85
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: s
Current token: s

Step: 86
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 87
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 88
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: m
Current token: m

Step: 91
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 92
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 93
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 94
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 95
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 96
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 97
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 98
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 99
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 100
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 101
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 102
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 103
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 104
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 105
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: c
Current token: c

Step: 106
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 107
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 108
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 111
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 112
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 113
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: k
Current token: k

Step: 116
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 117
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 117: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 118
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: .
Current token: .

Step: 119
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 120
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 121
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 122
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 123
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: s
Current token: s

Step: 124
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 125
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 126
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 127
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 128
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: j
Current token: j

Step: 129
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 130
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 130: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 131
Stack: ['-START-', 'PATH', '/', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 131: SUFPORT
Applying rule 19: ['ε']

Step: 132
Stack: ['-START-', 'PATH', '/', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 132: /

Step: 133
Stack: ['-START-', 'PATH']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: d
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 134
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: d
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 135
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 136
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 137
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: d
Current token: d

Step: 138
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 139
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 140
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 141
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: i
Current token: i

Step: 142
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 143
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 144
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 145
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 146
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 147
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 148
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 149
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 150
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: c
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 151
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 152
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 153
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: c
Current token: c

Step: 154
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 155
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 156
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 157
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 158
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 159
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 160
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 161
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: o
Current token: o

Step: 162
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 163
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 164
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 165
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 166
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: y
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 167
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 168
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 169
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 170
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 171
Stack: ['-START-', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 171: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 172
Stack: ['-START-', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: /
Current token: /

Step: 173
Stack: ['-START-', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 174
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 175
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 176
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 177
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: f
Current token: f

Step: 178
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 179
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 180
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 181
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: i
Current token: i

Step: 182
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 183
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 184
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 185
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: l
Current token: l

Step: 186
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 187
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 188
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 189
Stack: ['-START-', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 190
Stack: ['-START-', 'SLASHPATH', 'SEGMENT']
Tokens: []
Current state: SEGMENT
Current token: $
Applying rule 33: ['ε']

Step: 191
Stack: ['-START-', 'SLASHPATH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 191: SLASHPATH
Applying rule 26: ['ε']

Step: 192
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 192: -START-

Success - valid URL

Accepted tokens:
ftp://student:cyprich@smrecek.sj/directory/file
**************************************************
Input URL: ftp://:cyprich@smrecek.sj/directory/file

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: URL
Current token: ftp://
Applying rule 2: ['FTPADDRESS']

Step: 2
Stack: ['-START-', 'FTPADDRESS']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: FTPADDRESS
Current token: ftp://
Applying rule 11: ['ftp://', 'LOGIN', '/', 'PATH']

Step: 3
Stack: ['-START-', 'PATH', '/', 'LOGIN', 'ftp://']
Tokens: [('-URLADDRESS-', 'ftp://'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), 
('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ftp://
Current token: ftp://

Step: 4
Stack: ['-START-', 'PATH', '/', 'LOGIN']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: LOGIN
Current token: :

Error - no rule found

These tokens were accepted before the error:
ftp://
Original input URL:
ftp://:cyprich@smrecek.sj/directory/file
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: telnet://student:cyprich@smrecek.sj

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: URL
Current token: telnet://
Applying rule 3: ['TELNETADDRESS']

Step: 2
Stack: ['-START-', 'TELNETADDRESS']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: TELNETADDRESS
Current token: telnet://
Applying rule 12: ['telnet://', 'LOGIN']

Step: 3
Stack: ['-START-', 'LOGIN', 'telnet://']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: telnet://
Current token: telnet://

Step: 4
Stack: ['-START-', 'LOGIN']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: LOGIN
Current token: s
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: USER
Current token: s
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: t
Current token: t

Step: 15
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: u
Current token: u

Step: 20
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: d
Current token: d

Step: 25
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 30
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: n
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: n
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: n
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: n
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'n']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: n
Current token: n

Step: 35
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: t
Current token: t

Step: 40
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 16: [':', 'PASSWORD', '@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: :
Current token: :

Step: 43
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: PASSWORD
Current token: c
Applying rule 31: ['XALPHAS']

Step: 44
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 48
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: y
Current token: y

Step: 53
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 54
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 55
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 56
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 57
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: p
Current token: p

Step: 58
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 59
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 60
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 63
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 64
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 65
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 66
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 67
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: i
Current token: i

Step: 68
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 69
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 70
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 71
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 72
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 73
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 74
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 75
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 76
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 77
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: h
Current token: h

Step: 78
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 79
Stack: ['-START-', 'HOSTPORT', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 79: @

Step: 80
Stack: ['-START-', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 81
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 82
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 83
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 84
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 85
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 86
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 87
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 88
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: m
Current token: m

Step: 91
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 92
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 93
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 94
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 95
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 96
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 97
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 98
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 99
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 100
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 101
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 102
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 103
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 104
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 105
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 106
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 107
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 108
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 111
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 112
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 113
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: k
Current token: k

Step: 116
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 117
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 117: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 118
Stack: ['-START-', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: .
Current token: .

Step: 119
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 120
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 121
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 122
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 123
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 124
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 125
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 126
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 127
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 128
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: j
Current token: j

Step: 129
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 130
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 130: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 131
Stack: ['-START-', 'SUFPORT', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 131: SUFPORT
Applying rule 19: ['ε']

Step: 132
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 132: -START-

Success - valid URL

Accepted tokens:
telnet://student:cyprich@smrecek.sj
**************************************************
Input URL: telnet://student:cyprich@smrecek.sj/directory/file/path?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: URL
Current token: telnet://
Applying rule 3: ['TELNETADDRESS']

Step: 2
Stack: ['-START-', 'TELNETADDRESS']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: TELNETADDRESS
Current token: telnet://
Applying rule 12: ['telnet://', 'LOGIN']

Step: 3
Stack: ['-START-', 'LOGIN', 'telnet://']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: telnet://
Current token: telnet://

Step: 4
Stack: ['-START-', 'LOGIN']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: LOGIN
Current token: s
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: USER
Current token: s
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: t
Current token: t

Step: 15
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: u
Current token: u

Step: 20
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: d
Current token: d

Step: 25
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 30
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: n
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: n
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: n
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: n
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'n']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: n
Current token: n

Step: 35
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: t
Current token: t

Step: 40
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 16: [':', 'PASSWORD', '@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: :
Current token: :

Step: 43
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: PASSWORD
Current token: c
Applying rule 31: ['XALPHAS']

Step: 44
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 48
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 53
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 54
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 55
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 56
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 57
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: p
Current token: p

Step: 58
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 59
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 60
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 63
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 64
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 65
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 66
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 67
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: i
Current token: i

Step: 68
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 69
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 70
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 71
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 72
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 73
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 74
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 75
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 76
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 77
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: h
Current token: h

Step: 78
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 79
Stack: ['-START-', 'HOSTPORT', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 79: @

Step: 80
Stack: ['-START-', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 81
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 82
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 83
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 84
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 85
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 86
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 87
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 88
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 91
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 92
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 93
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 94
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 95
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 96
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 97
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 98
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 99
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 100
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 101
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 102
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 103
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 104
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 105
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 106
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 107
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 108
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 111
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 112
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 113
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: k
Current token: k

Step: 116
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 117
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 117: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 118
Stack: ['-START-', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: .
Current token: .

Step: 119
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 120
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 121
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 122
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 123
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 124
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 125
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 126
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 127
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 128
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 129
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 130
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 130: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 131
Stack: ['-START-', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 131: SUFPORT
Applying rule 19: ['ε']

Step: 132
Stack: ['-START-', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 132: -START-

Error - tokens left

These tokens were accepted before the error:
telnet://student:cyprich@smrecek.sj
Original input URL:
telnet://student:cyprich@smrecek.sj/directory/file/path?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: telnet://student:cyprich@smrecek:0101

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: URL
Current token: telnet://
Applying rule 3: ['TELNETADDRESS']

Step: 2
Stack: ['-START-', 'TELNETADDRESS']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: TELNETADDRESS
Current token: telnet://
Applying rule 12: ['telnet://', 'LOGIN']

Step: 3
Stack: ['-START-', 'LOGIN', 'telnet://']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: telnet://
Current token: telnet://

Step: 4
Stack: ['-START-', 'LOGIN']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: LOGIN
Current token: s
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: USER
Current token: s
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 15
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: u
Current token: u

Step: 20
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: d
Current token: d

Step: 25
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 30
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: n
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: n
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: n
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: n
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'n']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: n
Current token: n

Step: 35
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 40
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 16: [':', 'PASSWORD', '@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: :
Current token: :

Step: 43
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: PASSWORD
Current token: c
Applying rule 31: ['XALPHAS']

Step: 44
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: c
Current token: c

Step: 48
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: y
Current token: y

Step: 53
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 54
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 55
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 56
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 57
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: p
Current token: p

Step: 58
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 59
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 60
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 63
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]        
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 64
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]        
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 65
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]        
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 66
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]        
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 67
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]        
Current state: i
Current token: i

Step: 68
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 69
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 70
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 71
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 72
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: c
Current token: c

Step: 73
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 74
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 75
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 76
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 77
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: h
Current token: h

Step: 78
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 79
Stack: ['-START-', 'HOSTPORT', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 79: @

Step: 80
Stack: ['-START-', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 81
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 82
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 83
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 84
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 85
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: s
Current token: s

Step: 86
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 87
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 88
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: m
Current token: m

Step: 91
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 92
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 93
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 94
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 95
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 96
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 97
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 98
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 99
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 100
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 101
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]  
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 102
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]  
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 103
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]  
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 104
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]  
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 105
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]  
Current state: c
Current token: c

Step: 106
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 107
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 108
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 111
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 112
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 113
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: k
Current token: k

Step: 116
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 117
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 117: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 118
Stack: ['-START-', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 118: SUFPORT
Applying rule 18: [':', 'PORT']

Step: 119
Stack: ['-START-', 'PORT', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: :
Current token: :

Step: 120
Stack: ['-START-', 'PORT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: PORT
Current token: 0
Applying rule 23: ['DIGITS']

Step: 121
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 122
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 123
Stack: ['-START-', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: 0
Current token: 0

Step: 124
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 125
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 126
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 127
Stack: ['-START-', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: 1
Current token: 1

Step: 128
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: MOREDIGITS
Current token: 0
Applying rule 40: ['DIGITS']

Step: 129
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 130
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 131
Stack: ['-START-', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1')]
Current state: 0
Current token: 0

Step: 132
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 133
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 134
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 135
Stack: ['-START-', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: 1
Current token: 1

Step: 136
Stack: ['-START-', 'MOREDIGITS']
Tokens: []
Current state: MOREDIGITS
Current token: $
Applying rule 41: ['ε']

Step: 137
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 137: -START-

Success - valid URL

Accepted tokens:
telnet://student:cyprich@smrecek:0101
**************************************************
Input URL: telnet://student:cyprich@smrecek:0101.sj

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: URL
Current token: telnet://
Applying rule 3: ['TELNETADDRESS']

Step: 2
Stack: ['-START-', 'TELNETADDRESS']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: TELNETADDRESS
Current token: telnet://
Applying rule 12: ['telnet://', 'LOGIN']

Step: 3
Stack: ['-START-', 'LOGIN', 'telnet://']
Tokens: [('-URLADDRESS-', 'telnet://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: telnet://
Current token: telnet://

Step: 4
Stack: ['-START-', 'LOGIN']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: LOGIN
Current token: s
Applying rule 14: ['USER', 'SUFPASSHOST']

Step: 5
Stack: ['-START-', 'SUFPASSHOST', 'USER']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: USER
Current token: s
Applying rule 30: ['XALPHAS']

Step: 6
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: t
Current token: t

Step: 15
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: u
Current token: u

Step: 20
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: d
Current token: d

Step: 25
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', 
'.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', 
'.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', 
'.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', 
'.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', 
'.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 30
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: n
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: n
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: n
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: n
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'n']
Tokens: [('-SINGLELETTER-', 'n'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'j')]
Current state: n
Current token: n

Step: 35
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'j')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPASSHOST', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'j')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'j')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'j')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'j')]
Current state: t
Current token: t

Step: 40
Stack: ['-START-', 'SUFPASSHOST', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPASSHOST', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 41: SUFPASSHOST
Applying rule 16: [':', 'PASSWORD', '@', 'HOSTPORT']

Step: 42
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: :
Current token: :

Step: 43
Stack: ['-START-', 'HOSTPORT', '@', 'PASSWORD']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: PASSWORD
Current token: c
Applying rule 31: ['XALPHAS']

Step: 44
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 48
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: y
Current token: y

Step: 53
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 54
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 55
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 56
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 57
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: p
Current token: p

Step: 58
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 59
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 60
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 63
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 64
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 65
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 66
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 67
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: i
Current token: i

Step: 68
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 69
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 70
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 71
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 72
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 73
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 74
Stack: ['-START-', 'HOSTPORT', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 75
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 76
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 77
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: h
Current token: h

Step: 78
Stack: ['-START-', 'HOSTPORT', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 79
Stack: ['-START-', 'HOSTPORT', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 79: @

Step: 80
Stack: ['-START-', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 81
Stack: ['-START-', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 82
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 83
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 84
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 85
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 86
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 87
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 88
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: m
Current token: m

Step: 91
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 92
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 93
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 94
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 95
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 96
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 97
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 98
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 99
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 100
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), 
('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 101
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 102
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 103
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 104
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 105
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 106
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 107
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 108
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 111
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 112
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 113
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: k
Current token: k

Step: 116
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]        
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 117
Stack: ['-START-', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]        
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 117: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 118
Stack: ['-START-', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]        
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 118: SUFPORT
Applying rule 18: [':', 'PORT']

Step: 119
Stack: ['-START-', 'PORT', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]        
Current state: :
Current token: :

Step: 120
Stack: ['-START-', 'PORT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: PORT
Current token: 0
Applying rule 23: ['DIGITS']

Step: 121
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 122
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 123
Stack: ['-START-', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: 0
Current token: 0

Step: 124
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 125
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 126
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 127
Stack: ['-START-', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: 1
Current token: 1

Step: 128
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREDIGITS
Current token: 0
Applying rule 40: ['DIGITS']

Step: 129
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 130
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 131
Stack: ['-START-', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: 0
Current token: 0

Step: 132
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 133
Stack: ['-START-', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 134
Stack: ['-START-', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 135
Stack: ['-START-', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: 1
Current token: 1

Step: 136
Stack: ['-START-', 'MOREDIGITS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREDIGITS
Current token: .

Error - no rule found

These tokens were accepted before the error:
telnet://student:cyprich@smrecek:0101
Original input URL:
telnet://student:cyprich@smrecek:0101.sj
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: http://smrecek.sj/directory/file/path?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), 
('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), 
('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), 
('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: k
Current token: k

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 41: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: .
Current token: .

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 54: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 55: SUFPORT
Applying rule 19: ['ε']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 56: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 57
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: /
Current token: /

Step: 58
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: PATH
Current token: d
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 59
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: d
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 60
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 63
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 64
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 65
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 66
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: i
Current token: i

Step: 67
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 68
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 69
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 70
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 71
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 72
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 75
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: c
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 76
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 77
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 78
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 79
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 80
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 81
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 82
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: t
Current token: t

Step: 83
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 84
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 85
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 86
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 87
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 88
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 91
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: y
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 92
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 93
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 94
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 95
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 96
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 96: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 97
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: /
Current token: /

Step: 98
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 99
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 100
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 101
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 102
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: f
Current token: f

Step: 103
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 104
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 105
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 106
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: i
Current token: i

Step: 107
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 108
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 109
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 110
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 111
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 112
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 113
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 114
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 115
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 116
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 116: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 117
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: /
Current token: /

Step: 118
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 119
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: p
Current token: p

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: a
Current token: a

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: t
Current token: t

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: h
Current token: h

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: ?
Applying rule 33: ['ε']

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 136: SLASHPATH
Applying rule 26: ['ε']

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 137: SUFSEARCH
Applying rule 9: ['?', 'SEARCH']

Step: 138
Stack: ['-START-', 'SEARCH', '?']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ?
Current token: ?

Step: 139
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: s
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 140
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 141
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 142
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 143
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 144
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 145
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 146
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 147
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 148
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: u
Current token: u

Step: 149
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: b
Applying rule 35: ['XALPHAS']

Step: 150
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: b
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 151
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: b
Applying rule 37: ['ALPHA']

Step: 152
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: b
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 153
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'b']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: b
Current token: b

Step: 154
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 155
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 156
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 157
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 158
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 159
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 160
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 161
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 162
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 163
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 164
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 165
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 166
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 167
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 168
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 169
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 170
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 171
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 172
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 173
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: t
Current token: t

Step: 174
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 175
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 175: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 176
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: +
Current token: +

Step: 177
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: H
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 178
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: H
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 179
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: H
Applying rule 37: ['ALPHA']

Step: 180
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: H
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 181
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'H']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: H
Current token: H

Step: 182
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 183
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 184
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 185
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 186
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 187
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 188
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 189
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 190
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 191
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 192
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 193
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 194
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 195
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 196
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 197
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 198
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 199
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 200
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 201
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 202
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: P
Applying rule 35: ['XALPHAS']

Step: 203
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: P
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 204
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: P
Applying rule 37: ['ALPHA']

Step: 205
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: P
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 206
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'P']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: P
Current token: P

Step: 207
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 208
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 209
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 210
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 211
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: E
Current token: E

Step: 212
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: R
Applying rule 35: ['XALPHAS']

Step: 213
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: R
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 214
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: R
Applying rule 37: ['ALPHA']

Step: 215
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: R
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 216
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'R']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: R
Current token: R

Step: 217
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: C
Applying rule 35: ['XALPHAS']

Step: 218
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: C
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 219
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: C
Applying rule 37: ['ALPHA']

Step: 220
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: C
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 221
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'C']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: C
Current token: C

Step: 222
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 223
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 224
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 225
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 226
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 227
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 228
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 229
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 230
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 231
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 232
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: T
Applying rule 35: ['XALPHAS']

Step: 233
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: T
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 234
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: T
Applying rule 37: ['ALPHA']

Step: 235
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: T
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 236
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'T']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: T
Current token: T

Step: 237
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 2
Applying rule 35: ['XALPHAS']

Step: 238
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 2
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 239
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 2
Applying rule 38: ['DIGIT']

Step: 240
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 241
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 2
Current token: 2

Step: 242
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 243
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 244
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 245
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 246
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: 0
Current token: 0

Step: 247
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: MOREXALPHAS
Current token: W
Applying rule 35: ['XALPHAS']

Step: 248
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHAS
Current token: W
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 249
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHA
Current token: W
Applying rule 37: ['ALPHA']

Step: 250
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: ALPHA
Current token: W
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 251
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'W']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: W
Current token: W

Step: 252
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 253
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 254
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 255
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 256
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 257
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 258
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 259
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 260
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 261
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 262
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 263
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 264
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 265
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 266
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 267
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 268
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 269
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 270
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 271
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 272
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: A
Applying rule 35: ['XALPHAS']

Step: 273
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: A
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 274
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: A
Applying rule 37: ['ALPHA']

Step: 275
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: A
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 276
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'A']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: A
Current token: A

Step: 277
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 278
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 279
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 280
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 281
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 282
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: D
Applying rule 35: ['XALPHAS']

Step: 283
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: D
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 284
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: D
Applying rule 37: ['ALPHA']

Step: 285
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: D
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 286
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'D']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: D
Current token: D

Step: 287
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: MOREXALPHAS
Current token: b
Applying rule 35: ['XALPHAS']

Step: 288
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHAS
Current token: b
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 289
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHA
Current token: b
Applying rule 37: ['ALPHA']

Step: 290
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: ALPHA
Current token: b
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 291
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'b']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: b
Current token: b

Step: 292
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 293
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 294
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 295
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 296
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 297
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 298
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 299
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 300
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 301
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 302
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 303
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 304
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 305
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 306
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 307
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 308
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 308: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 309
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: +
Current token: +

Step: 310
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: L
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 311
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: L
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 312
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: L
Applying rule 37: ['ALPHA']

Step: 313
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: L
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 314
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'L']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: L
Current token: L

Step: 315
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 316
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 317
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 318
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 319
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 320
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 321
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 322
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 323
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 324
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 325
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 326
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 327
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 328
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 329
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 330
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 331
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 332
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 333
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 334
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 335
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: P
Applying rule 35: ['XALPHAS']

Step: 336
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: P
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 337
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: P
Applying rule 37: ['ALPHA']

Step: 338
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: P
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 339
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'P']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: P
Current token: P

Step: 340
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 341
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 342
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 343
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 344
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 345
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: R
Applying rule 35: ['XALPHAS']

Step: 346
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: R
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 347
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: R
Applying rule 37: ['ALPHA']

Step: 348
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: R
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 349
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'R']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: R
Current token: R

Step: 350
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: C
Applying rule 35: ['XALPHAS']

Step: 351
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: C
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 352
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: C
Applying rule 37: ['ALPHA']

Step: 353
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: C
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 354
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'C']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: C
Current token: C

Step: 355
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 356
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 357
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 358
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 359
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 360
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 361
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 362
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 363
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 364
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 365
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: T
Applying rule 35: ['XALPHAS']

Step: 366
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: T
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 367
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: T
Applying rule 37: ['ALPHA']

Step: 368
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: T
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 369
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'T']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: T
Current token: T

Step: 370
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 2
Applying rule 35: ['XALPHAS']

Step: 371
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 2
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 372
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 2
Applying rule 38: ['DIGIT']

Step: 373
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 374
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 2
Current token: 2

Step: 375
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 376
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 377
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 378
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 379
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 0
Current token: 0

Step: 380
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: I
Applying rule 35: ['XALPHAS']

Step: 381
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: I
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 382
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: I
Applying rule 37: ['ALPHA']

Step: 383
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: I
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 384
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'I']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: I
Current token: I

Step: 385
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 386
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 387
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 388
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 389
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: p
Current token: p

Step: 390
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: s
Applying rule 35: ['XALPHAS']

Step: 391
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 392
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 393
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 394
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 395
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 396
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 397
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 398
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 399
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: u
Current token: u

Step: 400
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 401
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 402
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 403
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 404
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 405
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 406
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 406: PLUSSEARCH
Applying rule 29: ['ε']

Step: 407
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 407: -START-

Success - valid URL

Accepted tokens:
http://smrecek.sj/directory/file/path?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum
**************************************************
Input URL: http://smrecek.sj/directory?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', 
'+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 
'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', 
'+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 
'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', 
'+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 
'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: r
Current token: r

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: k
Current token: k

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 41: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: .
Current token: .

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 54: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 55: SUFPORT
Applying rule 19: ['ε']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 56: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 57
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: /
Current token: /

Step: 58
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: PATH
Current token: d
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 59
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: d
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 60
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 61
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 62
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 63
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 64
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 65
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 66
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: i
Current token: i

Step: 67
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 68
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 69
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 70
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 71
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 72
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 75
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: c
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 76
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 77
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 78
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 79
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 80
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 81
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 82
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: t
Current token: t

Step: 83
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 84
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 85
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 86
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 87
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: r
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 88
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 89
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 90
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 91
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: y
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 92
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 93
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 94
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 95
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEGMENT
Current token: ?
Applying rule 33: ['ε']

Step: 96
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 96: SLASHPATH
Applying rule 26: ['ε']

Step: 97
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 97: SUFSEARCH
Applying rule 9: ['?', 'SEARCH']

Step: 98
Stack: ['-START-', 'SEARCH', '?']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ?
Current token: ?

Step: 99
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: s
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 100
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 101
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 102
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 103
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 104
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 105
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 106
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 107
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 108
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: u
Current token: u

Step: 109
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: b
Applying rule 35: ['XALPHAS']

Step: 110
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: b
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 111
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: b
Applying rule 37: ['ALPHA']

Step: 112
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: b
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 113
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'b']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: b
Current token: b

Step: 114
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 115
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 116
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 117
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 118
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 119
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 120
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 121
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 122
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 123
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 124
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 125
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 126
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 127
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 128
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 129
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 130
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 131
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 132
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 133
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]        
Current state: t
Current token: t

Step: 134
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 135
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 135: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 136
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: +
Current token: +

Step: 137
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: H
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 138
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: H
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 139
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: H
Applying rule 37: ['ALPHA']

Step: 140
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: H
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 141
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'H']
Tokens: [('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: H
Current token: H

Step: 142
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 143
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 144
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 145
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 146
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 147
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 148
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 149
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 150
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 151
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 152
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 153
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 154
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 155
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 156
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 157
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 158
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 159
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 160
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 161
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 162
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: P
Applying rule 35: ['XALPHAS']

Step: 163
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: P
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 164
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: P
Applying rule 37: ['ALPHA']

Step: 165
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: P
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 166
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'P']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: P
Current token: P

Step: 167
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 168
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 169
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 170
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 171
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]  
Current state: E
Current token: E

Step: 172
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: R
Applying rule 35: ['XALPHAS']

Step: 173
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: R
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 174
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: R
Applying rule 37: ['ALPHA']

Step: 175
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: R
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 176
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'R']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: R
Current token: R

Step: 177
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: C
Applying rule 35: ['XALPHAS']

Step: 178
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: C
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 179
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: C
Applying rule 37: ['ALPHA']

Step: 180
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: C
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 181
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'C']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), 
('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: C
Current token: C

Step: 182
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 183
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 184
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 185
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 186
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 187
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 188
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 189
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 190
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 191
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 192
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: T
Applying rule 35: ['XALPHAS']

Step: 193
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: T
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 194
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: T
Applying rule 37: ['ALPHA']

Step: 195
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: T
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 196
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'T']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: T
Current token: T

Step: 197
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 2
Applying rule 35: ['XALPHAS']

Step: 198
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 2
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 199
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 2
Applying rule 38: ['DIGIT']

Step: 200
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 201
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 2
Current token: 2

Step: 202
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 203
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 204
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 205
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 206
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: 0
Current token: 0

Step: 207
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: MOREXALPHAS
Current token: W
Applying rule 35: ['XALPHAS']

Step: 208
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHAS
Current token: W
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 209
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHA
Current token: W
Applying rule 37: ['ALPHA']

Step: 210
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: ALPHA
Current token: W
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 211
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'W']
Tokens: [('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: W
Current token: W

Step: 212
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 213
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 214
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 215
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 216
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 217
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 218
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 219
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 220
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 221
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 222
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 223
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 224
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 225
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 226
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: l
Current token: l

Step: 227
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 228
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 229
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 230
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 231
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 232
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: A
Applying rule 35: ['XALPHAS']

Step: 233
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: A
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 234
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: A
Applying rule 37: ['ALPHA']

Step: 235
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: A
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 236
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'A']
Tokens: [('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: A
Current token: A

Step: 237
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 238
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 239
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 240
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 241
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 242
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: D
Applying rule 35: ['XALPHAS']

Step: 243
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: D
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 244
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: D
Applying rule 37: ['ALPHA']

Step: 245
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: D
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 246
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'D']
Tokens: [('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: D
Current token: D

Step: 247
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: MOREXALPHAS
Current token: b
Applying rule 35: ['XALPHAS']

Step: 248
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHAS
Current token: b
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 249
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: XALPHA
Current token: b
Applying rule 37: ['ALPHA']

Step: 250
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: ALPHA
Current token: b
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 251
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'b']
Tokens: [('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]Current state: b
Current token: b

Step: 252
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 253
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 254
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 255
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 256
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 257
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 258
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 259
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 260
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 261
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: d
Current token: d

Step: 262
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 263
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 264
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 265
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 266
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 267
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 268
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 268: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 269
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: +
Current token: +

Step: 270
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: SEARCH
Current token: L
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 271
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: L
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 272
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: L
Applying rule 37: ['ALPHA']

Step: 273
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: L
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 274
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'L']
Tokens: [('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: L
Current token: L

Step: 275
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 276
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 277
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 278
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 279
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: o
Current token: o

Step: 280
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 281
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 282
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 283
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 284
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 285
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 286
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 287
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 288
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 289
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 290
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 291
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 292
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 293
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 294
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 295
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: P
Applying rule 35: ['XALPHAS']

Step: 296
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: P
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 297
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: P
Applying rule 37: ['ALPHA']

Step: 298
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: P
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 299
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'P']
Tokens: [('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: P
Current token: P

Step: 300
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 301
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 302
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 303
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 304
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 305
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: R
Applying rule 35: ['XALPHAS']

Step: 306
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: R
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 307
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: R
Applying rule 37: ['ALPHA']

Step: 308
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: R
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 309
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'R']
Tokens: [('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: R
Current token: R

Step: 310
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: C
Applying rule 35: ['XALPHAS']

Step: 311
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: C
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 312
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: C
Applying rule 37: ['ALPHA']

Step: 313
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: C
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 314
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'C']
Tokens: [('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: C
Current token: C

Step: 315
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: E
Applying rule 35: ['XALPHAS']

Step: 316
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: E
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 317
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: E
Applying rule 37: ['ALPHA']

Step: 318
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: E
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 319
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'E']
Tokens: [('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: E
Current token: E

Step: 320
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: N
Applying rule 35: ['XALPHAS']

Step: 321
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: N
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 322
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: N
Applying rule 37: ['ALPHA']

Step: 323
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: N
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 324
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'N']
Tokens: [('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: N
Current token: N

Step: 325
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: T
Applying rule 35: ['XALPHAS']

Step: 326
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: T
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 327
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: T
Applying rule 37: ['ALPHA']

Step: 328
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: T
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 329
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'T']
Tokens: [('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: T
Current token: T

Step: 330
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 2
Applying rule 35: ['XALPHAS']

Step: 331
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 2
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 332
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 2
Applying rule 38: ['DIGIT']

Step: 333
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 334
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 2
Current token: 2

Step: 335
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 336
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 337
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 338
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 339
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: 0
Current token: 0

Step: 340
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: I
Applying rule 35: ['XALPHAS']

Step: 341
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: I
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 342
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: I
Applying rule 37: ['ALPHA']

Step: 343
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: I
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 344
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'I']
Tokens: [('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: I
Current token: I

Step: 345
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 346
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 347
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 348
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 349
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: p
Current token: p

Step: 350
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: s
Applying rule 35: ['XALPHAS']

Step: 351
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 352
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 353
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 354
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 355
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 356
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 357
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 358
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 359
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: u
Current token: u

Step: 360
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 361
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 362
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 363
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 364
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 365
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 366
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 366: PLUSSEARCH
Applying rule 29: ['ε']

Step: 367
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 367: -START-

Success - valid URL

Accepted tokens:
http://smrecek.sj/directory?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv/path1/path2/file?search+query+filter+1

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 0
Current token: 0

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: f
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: f
Current token: f

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: v
Current token: v

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 3
Current token: 3

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', 
'+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', 
'+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', 
'+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', 
'+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', 
'+'), ('-SINGLEDIGIT-', '1')]
Current state: 0
Current token: 0

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', 
'1')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', 
'1')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', 
'1')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', 
'1')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', 
'1')]
Current state: v
Current token: v

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 3
Current token: 3

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: j
Current token: j

Step: 60
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: 4
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 4
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 4
Applying rule 38: ['DIGIT']

Step: 63
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 4
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 64
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '4']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 4
Current token: 4

Step: 65
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: z
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: z
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: z
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: z
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'z']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: z
Current token: z

Step: 70
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: y
Current token: y

Step: 75
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 76
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 77
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 78
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 79
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: k
Current token: k

Step: 80
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 81
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 82
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 83
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 84
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: y
Current token: y

Step: 85
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 86
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 86: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 87
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: .
Current token: .

Step: 88
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: HOSTNAME
Current token: j
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 89
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 90
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 91
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 92
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: j
Current token: j

Step: 93
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 94
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 95
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 96
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 97
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: v
Current token: v

Step: 98
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: /
Applying rule 36: ['ε']

Step: 99
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 99: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 100
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 100: SUFPORT
Applying rule 19: ['ε']

Step: 101
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 101: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 102
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: /
Current token: /

Step: 103
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 104
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 105
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 106
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 107
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: p
Current token: p

Step: 108
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 109
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 110
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 111
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: a
Current token: a

Step: 112
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 113
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 114
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 115
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 116
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 117
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 118
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 119
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: h
Current token: h

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: 1
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 1
Applying rule 38: ['DIGIT']

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 1
Current token: 1

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]     
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]     
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 125: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]     
Current state: /
Current token: /

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: p
Current token: p

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: a
Current token: a

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 138
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 139
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 140
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 141
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 142
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 143
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: h
Current token: h

Step: 144
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: 2
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 145
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 2
Applying rule 38: ['DIGIT']

Step: 146
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 147
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: 2
Current token: 2

Step: 148
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 149
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 149: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 150
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: /
Current token: /

Step: 151
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 152
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 153
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 154
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 155
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: f
Current token: f

Step: 156
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 157
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 158
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 159
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: i
Current token: i

Step: 160
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 161
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 162
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 163
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: l
Current token: l

Step: 164
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 165
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 166
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 167
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 168
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEGMENT
Current token: ?
Applying rule 33: ['ε']

Step: 169
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 169: SLASHPATH
Applying rule 26: ['ε']

Step: 170
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 170: SUFSEARCH
Applying rule 9: ['?', 'SEARCH']

Step: 171
Stack: ['-START-', 'SEARCH', '?']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ?
Current token: ?

Step: 172
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEARCH
Current token: s
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 173
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 174
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 175
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 176
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: s
Current token: s

Step: 177
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 178
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 179
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 180
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 181
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 182
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: a
Applying rule 35: ['XALPHAS']

Step: 183
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: a
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 184
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 185
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 186
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: a
Current token: a

Step: 187
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 188
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 189
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 190
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 191
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 192
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 193
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 194
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 195
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 196
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: c
Current token: c

Step: 197
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 198
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 199
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 200
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 201
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: h
Current token: h

Step: 202
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 203
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 203: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 204
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: +
Current token: +

Step: 205
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEARCH
Current token: q
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 206
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: q
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 207
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: q
Applying rule 37: ['ALPHA']

Step: 208
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: q
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 209
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'q']
Tokens: [('-SINGLELETTER-', 'q'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: q
Current token: q

Step: 210
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: u
Applying rule 35: ['XALPHAS']

Step: 211
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: u
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 212
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: u
Applying rule 37: ['ALPHA']

Step: 213
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: u
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 214
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'u']
Tokens: [('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: u
Current token: u

Step: 215
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 216
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 217
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 218
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 219
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 220
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 221
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 222
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 223
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 224
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 225
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 226
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 227
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 228
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 229
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: y
Current token: y

Step: 230
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 231
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 231: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 232
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: +
Current token: +

Step: 233
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: SEARCH
Current token: f
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 234
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 235
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 236
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 237
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: f
Current token: f

Step: 238
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 239
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 240
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 241
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 242
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: i
Current token: i

Step: 243
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: l
Applying rule 35: ['XALPHAS']

Step: 244
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: l
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 245
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 246
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 247
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: l
Current token: l

Step: 248
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 249
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 250
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 251
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 252
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: t
Current token: t

Step: 253
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 254
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 255
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 256
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 257
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: e
Current token: e

Step: 258
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 259
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 260
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 261
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 262
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: r
Current token: r

Step: 263
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 264
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 264: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 265
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLEDIGIT-', '1')]
Current state: +
Current token: +

Step: 266
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: SEARCH
Current token: 1
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 267
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: XALPHAS
Current token: 1
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 268
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: XALPHA
Current token: 1
Applying rule 38: ['DIGIT']

Step: 269
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 270
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', '1']
Tokens: [('-SINGLEDIGIT-', '1')]
Current state: 1
Current token: 1

Step: 271
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 272
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 272: PLUSSEARCH
Applying rule 29: ['ε']

Step: 273
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 273: -START-

Success - valid URL

Accepted tokens:
http://s0ftv3r0v3j4zyky.jv/path1/path2/file?search+query+filter+1
**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv/path1/path2/file?search=query&filter=1

Error - invalid URL - tokenizer error - unsupported character
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv:8080/path/to/file

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: f
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: f
Current token: f

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]     
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]     
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]     
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]     
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]     
Current state: v
Current token: v

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 3
Current token: 3

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: r
Current token: r

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: v
Current token: v

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 3
Current token: 3

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: j
Current token: j

Step: 60
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: 4
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: 4
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: 4
Applying rule 38: ['DIGIT']

Step: 63
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 4
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 64
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '4']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 4
Current token: 4

Step: 65
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')] 
Current state: MOREXALPHAS
Current token: z
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')] 
Current state: XALPHAS
Current token: z
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')] 
Current state: XALPHA
Current token: z
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')] 
Current state: ALPHA
Current token: z
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'z']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')] 
Current state: z
Current token: z

Step: 70
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 75
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 76
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 77
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 78
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 79
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: k
Current token: k

Step: 80
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 81
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 82
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 83
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 84
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: y
Current token: y

Step: 85
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 86
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 86: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 87
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: .
Current token: .

Step: 88
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: HOSTNAME
Current token: j
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 89
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 90
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 91
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 92
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: j
Current token: j

Step: 93
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 94
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 95
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 96
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 97
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: v
Current token: v

Step: 98
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 99
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 99: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 100
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 100: SUFPORT
Applying rule 18: [':', 'PORT']

Step: 101
Stack: ['-START-', 'SUFPATHSEARCH', 'PORT', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e')]
Current state: :
Current token: :

Step: 102
Stack: ['-START-', 'SUFPATHSEARCH', 'PORT']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PORT
Current token: 8
Applying rule 23: ['DIGITS']

Step: 103
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGITS
Current token: 8
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 104
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 8
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 105
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '8']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 8
Current token: 8

Step: 106
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREDIGITS
Current token: 0
Applying rule 40: ['DIGITS']

Step: 107
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 108
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 109
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 110
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREDIGITS
Current token: 8
Applying rule 40: ['DIGITS']

Step: 111
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGITS
Current token: 8
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 112
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 8
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 113
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '8']
Tokens: [('-SINGLEDIGIT-', '8'), ('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 8
Current token: 8

Step: 114
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREDIGITS
Current token: 0
Applying rule 40: ['DIGITS']

Step: 115
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGITS
Current token: 0
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 116
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 117
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: 0
Current token: 0

Step: 118
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: MOREDIGITS
Current token: /
Applying rule 41: ['ε']

Step: 119
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 119: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: /
Current token: /

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: p
Current token: p

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: a
Current token: a

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: h
Current token: h

Step: 138
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 139
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 139: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 140
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]    
Current state: /
Current token: /

Step: 141
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: t
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 142
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 143
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 144
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 145
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: t
Current token: t

Step: 146
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 147
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 148
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 149
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: o
Current token: o

Step: 150
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 151
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 151: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 152
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: /
Current token: /

Step: 153
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 154
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 155
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 156
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 157
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: f
Current token: f

Step: 158
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 159
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 160
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 161
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: i
Current token: i

Step: 162
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 163
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 164
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 165
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e')]
Current state: l
Current token: l

Step: 166
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 167
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 168
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 169
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e')]
Current state: e
Current token: e

Step: 170
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: []
Current state: SEGMENT
Current token: $
Applying rule 33: ['ε']

Step: 171
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 171: SLASHPATH
Applying rule 26: ['ε']

Step: 172
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 172: SUFSEARCH
Applying rule 10: ['ε']

Step: 173
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 173: -START-

Success - valid URL

Accepted tokens:
http://s0ftv3r0v3j4zyky.jv:8080/path/to/file
**************************************************
Input URL: http://s0ftv3r0v3j4zyky.jv:2121/path/to/file?search+keyword

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: URL
Current token: http://
Applying rule 1: ['HTTPADDRESS']

Step: 2
Stack: ['-START-', 'HTTPADDRESS']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HTTPADDRESS
Current token: http://
Applying rule 5: ['http://', 'HOSTPORT', 'SUFPATHSEARCH']

Step: 3
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT', 'http://']
Tokens: [('-URLADDRESS-', 'http://'), ('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: http://
Current token: http://

Step: 4
Stack: ['-START-', 'SUFPATHSEARCH', 'HOSTPORT']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTPORT
Current token: s
Applying rule 17: ['HOSTNAME', 'SUFPORT']

Step: 5
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 6
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 7
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 8
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 9
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: s
Current token: s

Step: 10
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 11
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 12
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 13
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 14
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 0
Current token: 0

Step: 15
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: f
Applying rule 35: ['XALPHAS']

Step: 16
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: f
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 17
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 18
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 19
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', 
'3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: f
Current token: f

Step: 20
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: t
Applying rule 35: ['XALPHAS']

Step: 21
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: t
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 22
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 23
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 24
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 
'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 25
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 26
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 27
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 28
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 29
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 30
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 31
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 32
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 33
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 34
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 3
Current token: 3

Step: 35
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 36
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 37
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 38
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 39
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 
'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: r
Current token: r

Step: 40
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 0
Applying rule 35: ['XALPHAS']

Step: 41
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 0
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 0
Applying rule 38: ['DIGIT']

Step: 43
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 0
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 44
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '0']
Tokens: [('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 
'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 0
Current token: 0

Step: 45
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 50
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 3
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 3
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 3
Applying rule 38: ['DIGIT']

Step: 53
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 3
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 54
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '3']
Tokens: [('-SINGLEDIGIT-', '3'), ('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 3
Current token: 3

Step: 55
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: j
Current token: j

Step: 60
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: 4
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: 4
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: 4
Applying rule 38: ['DIGIT']

Step: 63
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 4
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 64
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', '4']
Tokens: [('-SINGLEDIGIT-', '4'), ('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 4
Current token: 4

Step: 65
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), 
('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: z
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), 
('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: z
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), 
('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: z
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), 
('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: z
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'z']
Tokens: [('-SINGLELETTER-', 'z'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), 
('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: z
Current token: z

Step: 70
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', 
'/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 75
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 76
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 77
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 78
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 79
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: k
Current token: k

Step: 80
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 81
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 82
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 83
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 84
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 
'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 85
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 86
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 86: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 87
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), 
('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: .
Current token: .

Step: 88
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: HOSTNAME
Current token: j
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 89
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 90
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 91
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 92
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 
'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), 
('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: j
Current token: j

Step: 93
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: v
Applying rule 35: ['XALPHAS']

Step: 94
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: v
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 95
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: v
Applying rule 37: ['ALPHA']

Step: 96
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: v
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 97
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS', 'v']
Tokens: [('-SINGLELETTER-', 'v'), ('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 
'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), 
('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: v
Current token: v

Step: 98
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]       
Current state: MOREXALPHAS
Current token: :
Applying rule 36: ['ε']

Step: 99
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]       
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 99: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 100
Stack: ['-START-', 'SUFPATHSEARCH', 'SUFPORT', 'ε']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]       
Current state: ε
Current token: :
Epsilon detected, skipping...
Current state 100: SUFPORT
Applying rule 18: [':', 'PORT']

Step: 101
Stack: ['-START-', 'SUFPATHSEARCH', 'PORT', ':']
Tokens: [('-SYMBOL-', ':'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 
'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]       
Current state: :
Current token: :

Step: 102
Stack: ['-START-', 'SUFPATHSEARCH', 'PORT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PORT
Current token: 2
Applying rule 23: ['DIGITS']

Step: 103
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGITS
Current token: 2
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 104
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 105
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), 
('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 2
Current token: 2

Step: 106
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 107
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 108
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 109
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), 
('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 1
Current token: 1

Step: 110
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREDIGITS
Current token: 2
Applying rule 40: ['DIGITS']

Step: 111
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGITS
Current token: 2
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 112
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 2
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 113
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '2']
Tokens: [('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 2
Current token: 2

Step: 114
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREDIGITS
Current token: 1
Applying rule 40: ['DIGITS']

Step: 115
Stack: ['-START-', 'SUFPATHSEARCH', 'DIGITS']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGITS
Current token: 1
Applying rule 39: ['DIGIT', 'MOREDIGITS']

Step: 116
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', 'DIGIT']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: DIGIT
Current token: 1
Applying rule 43: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')

Step: 117
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS', '1']
Tokens: [('-SINGLEDIGIT-', '1'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: 1
Current token: 1

Step: 118
Stack: ['-START-', 'SUFPATHSEARCH', 'MOREDIGITS']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREDIGITS
Current token: /
Applying rule 41: ['ε']

Step: 119
Stack: ['-START-', 'SUFPATHSEARCH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 119: SUFPATHSEARCH
Applying rule 6: ['/', 'PATH', 'SUFSEARCH']

Step: 120
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 121
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: p
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 122
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: p
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 123
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 124
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 125
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: p
Current token: p

Step: 126
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: a
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 127
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 128
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 129
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: a
Current token: a

Step: 130
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 131
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 132
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 133
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 134
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: h
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 135
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 136
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 137
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: h
Current token: h

Step: 138
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 139
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 139: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 140
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 141
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: t
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 142
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: t
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 143
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: t
Applying rule 37: ['ALPHA']

Step: 144
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: t
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 145
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 't']
Tokens: [('-SINGLELETTER-', 't'), ('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: t
Current token: t

Step: 146
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: o
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 147
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 148
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 149
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: o
Current token: o

Step: 150
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: /
Applying rule 33: ['ε']

Step: 151
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: /
Epsilon detected, skipping...
Current state 151: SLASHPATH
Applying rule 25: ['/', 'PATH']

Step: 152
Stack: ['-START-', 'SUFSEARCH', 'PATH', '/']
Tokens: [('-SYMBOL-', '/'), ('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: /
Current token: /

Step: 153
Stack: ['-START-', 'SUFSEARCH', 'PATH']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: PATH
Current token: f
Applying rule 24: ['SEGMENT', 'SLASHPATH']

Step: 154
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: f
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 155
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: f
Applying rule 37: ['ALPHA']

Step: 156
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: f
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 157
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'f']
Tokens: [('-SINGLELETTER-', 'f'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: f
Current token: f

Step: 158
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: i
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 159
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 160
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 161
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: i
Current token: i

Step: 162
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: l
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 163
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: l
Applying rule 37: ['ALPHA']

Step: 164
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: l
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 165
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'l']
Tokens: [('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: l
Current token: l

Step: 166
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]    
Current state: SEGMENT
Current token: e
Applying rule 32: ['XALPHA', 'SEGMENT']

Step: 167
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]    
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 168
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]    
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 169
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]    
Current state: e
Current token: e

Step: 170
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'SEGMENT']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEGMENT
Current token: ?
Applying rule 33: ['ε']

Step: 171
Stack: ['-START-', 'SUFSEARCH', 'SLASHPATH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 171: SLASHPATH
Applying rule 26: ['ε']

Step: 172
Stack: ['-START-', 'SUFSEARCH', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 172: SUFSEARCH
Applying rule 9: ['?', 'SEARCH']

Step: 173
Stack: ['-START-', 'SEARCH', '?']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ?
Current token: ?

Step: 174
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEARCH
Current token: s
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 175
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 176
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 177
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 178
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: s
Current token: s

Step: 179
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 180
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 181
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 182
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 183
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: e
Current token: e

Step: 184
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: a
Applying rule 35: ['XALPHAS']

Step: 185
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: a
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 186
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: a
Applying rule 37: ['ALPHA']

Step: 187
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: a
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 188
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'a']
Tokens: [('-SINGLELETTER-', 'a'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: a
Current token: a

Step: 189
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 190
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 191
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 192
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 193
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: r
Current token: r

Step: 194
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 195
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 196
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 197
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 198
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: c
Current token: c

Step: 199
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 200
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 201
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 202
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 203
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: h
Current token: h

Step: 204
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: +
Applying rule 36: ['ε']

Step: 205
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ε
Current token: +
Epsilon detected, skipping...
Current state 205: PLUSSEARCH
Applying rule 28: ['+', 'SEARCH']

Step: 206
Stack: ['-START-', 'SEARCH', '+']
Tokens: [('-SYMBOL-', '+'), ('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: +
Current token: +

Step: 207
Stack: ['-START-', 'SEARCH']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: SEARCH
Current token: k
Applying rule 27: ['XALPHAS', 'PLUSSEARCH']

Step: 208
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 209
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 210
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 211
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: k
Current token: k

Step: 212
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 213
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 214
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 215
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 216
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: e
Current token: e

Step: 217
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 218
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 219
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 220
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 221
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: y
Current token: y

Step: 222
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: w
Applying rule 35: ['XALPHAS']

Step: 223
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: w
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 224
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: w
Applying rule 37: ['ALPHA']

Step: 225
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: w
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 226
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'w']
Tokens: [('-SINGLELETTER-', 'w'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: w
Current token: w

Step: 227
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: o
Applying rule 35: ['XALPHAS']

Step: 228
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: o
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 229
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: o
Applying rule 37: ['ALPHA']

Step: 230
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: o
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 231
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'o']
Tokens: [('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: o
Current token: o

Step: 232
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 233
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 234
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 235
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 236
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'd')]
Current state: r
Current token: r

Step: 237
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: MOREXALPHAS
Current token: d
Applying rule 35: ['XALPHAS']

Step: 238
Stack: ['-START-', 'PLUSSEARCH', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: XALPHAS
Current token: d
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 239
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: XALPHA
Current token: d
Applying rule 37: ['ALPHA']

Step: 240
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: ALPHA
Current token: d
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 241
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS', 'd']
Tokens: [('-SINGLELETTER-', 'd')]
Current state: d
Current token: d

Step: 242
Stack: ['-START-', 'PLUSSEARCH', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 243
Stack: ['-START-', 'PLUSSEARCH', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 243: PLUSSEARCH
Applying rule 29: ['ε']

Step: 244
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 244: -START-

Success - valid URL

Accepted tokens:
http://s0ftv3r0v3j4zyky.jv:2121/path/to/file?search+keyword
**************************************************
Input URL:

Step: 1
Stack: ['-START-', 'URL']
Tokens: []
Current state: URL
Current token: $

Error - no rule found

These tokens were accepted before the error:

Original input URL:

**************************************************
Input URL: mailto::cyprich@smrecek

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: URL
Current token: mailto::
Applying rule 4: ['MAILTOADDRESS']

Step: 2
Stack: ['-START-', 'MAILTOADDRESS']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MAILTOADDRESS
Current token: mailto::
Applying rule 13: ['mailto::', 'XALPHAS', '@', 'HOSTNAME']

Step: 3
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS', 'mailto::']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: mailto::
Current token: mailto::

Step: 4
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 5
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 6
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 7
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: c
Current token: c

Step: 8
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 9
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 10
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 11
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 12
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: y
Current token: y

Step: 13
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 14
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 15
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 16
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 17
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: p
Current token: p

Step: 18
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 19
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 20
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 21
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 22
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: r
Current token: r

Step: 23
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 24
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 25
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 26
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 27
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: i
Current token: i

Step: 28
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 29
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 30
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 31
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 32
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: c
Current token: c

Step: 33
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 34
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 35
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 36
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 37
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: h
Current token: h

Step: 38
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 39
Stack: ['-START-', 'HOSTNAME', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 39: @

Step: 40
Stack: ['-START-', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 41
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 43
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 44
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: s
Current token: s

Step: 45
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: m
Current token: m

Step: 50
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 53
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 54
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: r
Current token: r

Step: 55
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: e
Current token: e

Step: 60
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 63
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 64
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: c
Current token: c

Step: 65
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k')]
Current state: e
Current token: e

Step: 70
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k')]
Current state: k
Current token: k

Step: 75
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 76
Stack: ['-START-', 'DOTHOSTNAME', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 76: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 77
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 77: -START-

Success - valid URL

Accepted tokens:
mailto::cyprich@smrecek
**************************************************
Input URL: mailto::cyprich@smrecek.sj

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: URL
Current token: mailto::
Applying rule 4: ['MAILTOADDRESS']

Step: 2
Stack: ['-START-', 'MAILTOADDRESS']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MAILTOADDRESS
Current token: mailto::
Applying rule 13: ['mailto::', 'XALPHAS', '@', 'HOSTNAME']

Step: 3
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS', 'mailto::']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: mailto::
Current token: mailto::

Step: 4
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 5
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 6
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 7
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 8
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 9
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 10
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 11
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 12
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: y
Current token: y

Step: 13
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 14
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 15
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 16
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 17
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]    
Current state: p
Current token: p

Step: 18
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 19
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 20
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 21
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 22
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 23
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 24
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 25
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 26
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 27
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: i
Current token: i

Step: 28
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 29
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 30
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 31
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 32
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 33
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 34
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 35
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 36
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 37
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: h
Current token: h

Step: 38
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 39
Stack: ['-START-', 'HOSTNAME', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 39: @

Step: 40
Stack: ['-START-', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 41
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 43
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 44
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 45
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: m
Current token: m

Step: 50
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 53
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 54
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: r
Current token: r

Step: 55
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 60
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 63
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 64
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: c
Current token: c

Step: 65
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: e
Current token: e

Step: 70
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: k
Current token: k

Step: 75
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 76
Stack: ['-START-', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 76: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 77
Stack: ['-START-', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: .
Current token: .

Step: 78
Stack: ['-START-', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 79
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 80
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 81
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 82
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j')]
Current state: s
Current token: s

Step: 83
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 84
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 85
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 86
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 87
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j')]
Current state: j
Current token: j

Step: 88
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: []
Current state: MOREXALPHAS
Current token: $
Applying rule 36: ['ε']

Step: 89
Stack: ['-START-', 'DOTHOSTNAME', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 89: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 90
Stack: ['-START-', 'ε']
Tokens: []
Current state: ε
Current token: $
Epsilon detected, skipping...
Current state 90: -START-

Success - valid URL

Accepted tokens:
mailto::cyprich@smrecek.sj
**************************************************
Input URL: mailto::cyprich@smrecek.sj?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum

Step: 1
Stack: ['-START-', 'URL']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: URL
Current token: mailto::
Applying rule 4: ['MAILTOADDRESS']

Step: 2
Stack: ['-START-', 'MAILTOADDRESS']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MAILTOADDRESS
Current token: mailto::
Applying rule 13: ['mailto::', 'XALPHAS', '@', 'HOSTNAME']

Step: 3
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS', 'mailto::']
Tokens: [('-URLADDRESS-', 'mailto::'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: mailto::
Current token: mailto::

Step: 4
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 5
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 6
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 7
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')] 
Current state: c
Current token: c

Step: 8
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: y
Applying rule 35: ['XALPHAS']

Step: 9
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: y
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 10
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: y
Applying rule 37: ['ALPHA']

Step: 11
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: y
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 12
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'y']
Tokens: [('-SINGLELETTER-', 'y'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: y
Current token: y

Step: 13
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: p
Applying rule 35: ['XALPHAS']

Step: 14
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: p
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 15
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: p
Applying rule 37: ['ALPHA']

Step: 16
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: p
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 17
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'p']
Tokens: [('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: p
Current token: p

Step: 18
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 19
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 20
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 21
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 22
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), 
('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 23
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: i
Applying rule 35: ['XALPHAS']

Step: 24
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: i
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 25
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: i
Applying rule 37: ['ALPHA']

Step: 26
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: i
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 27
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'i']
Tokens: [('-SINGLELETTER-', 'i'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), 
('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: i
Current token: i

Step: 28
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 29
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 30
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 31
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 32
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), 
('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 33
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: h
Applying rule 35: ['XALPHAS']

Step: 34
Stack: ['-START-', 'HOSTNAME', '@', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: h
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 35
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: h
Applying rule 37: ['ALPHA']

Step: 36
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: h
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 37
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS', 'h']
Tokens: [('-SINGLELETTER-', 'h'), ('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), 
('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: h
Current token: h

Step: 38
Stack: ['-START-', 'HOSTNAME', '@', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: @
Applying rule 36: ['ε']

Step: 39
Stack: ['-START-', 'HOSTNAME', '@', 'ε']
Tokens: [('-SYMBOL-', '@'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), 
('-SINGLELETTER-', 'm')]
Current state: ε
Current token: @
Epsilon detected, skipping...
Current state 39: @

Step: 40
Stack: ['-START-', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 41
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 42
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 43
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 44
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 
'm')]
Current state: s
Current token: s

Step: 45
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: m
Applying rule 35: ['XALPHAS']

Step: 46
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: m
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 47
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: m
Applying rule 37: ['ALPHA']

Step: 48
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: m
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 49
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'm']
Tokens: [('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: m
Current token: m

Step: 50
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: r
Applying rule 35: ['XALPHAS']

Step: 51
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: r
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 52
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: r
Applying rule 37: ['ALPHA']

Step: 53
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: r
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 54
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'r']
Tokens: [('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: r
Current token: r

Step: 55
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 56
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 57
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 58
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 59
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', 
'0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 60
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: c
Applying rule 35: ['XALPHAS']

Step: 61
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: c
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 62
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: c
Applying rule 37: ['ALPHA']

Step: 63
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: c
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 64
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'c']
Tokens: [('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 
'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: c
Current token: c

Step: 65
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: e
Applying rule 35: ['XALPHAS']

Step: 66
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: e
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 67
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: e
Applying rule 37: ['ALPHA']

Step: 68
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: e
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 69
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'e']
Tokens: [('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 
'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: e
Current token: e

Step: 70
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: k
Applying rule 35: ['XALPHAS']

Step: 71
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: k
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 72
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: k
Applying rule 37: ['ALPHA']

Step: 73
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: k
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 74
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'k']
Tokens: [('-SINGLELETTER-', 'k'), ('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 
's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: k
Current token: k

Step: 75
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: .
Applying rule 36: ['ε']

Step: 76
Stack: ['-START-', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: .
Epsilon detected, skipping...
Current state 76: DOTHOSTNAME
Applying rule 21: ['.', 'HOSTNAME']

Step: 77
Stack: ['-START-', 'HOSTNAME', '.']
Tokens: [('-SYMBOL-', '.'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 
'u'), ('-SINGLELETTER-', 'm')]
Current state: .
Current token: .

Step: 78
Stack: ['-START-', 'HOSTNAME']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: HOSTNAME
Current token: s
Applying rule 20: ['XALPHAS', 'DOTHOSTNAME']

Step: 79
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: s
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 80
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: s
Applying rule 37: ['ALPHA']

Step: 81
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: s
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 82
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 's']
Tokens: [('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: s
Current token: s

Step: 83
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: j
Applying rule 35: ['XALPHAS']

Step: 84
Stack: ['-START-', 'DOTHOSTNAME', 'XALPHAS']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHAS
Current token: j
Applying rule 34: ['XALPHA', 'MOREXALPHAS']

Step: 85
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'XALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: XALPHA
Current token: j
Applying rule 37: ['ALPHA']

Step: 86
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'ALPHA']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ALPHA
Current token: j
Applying rule 42: ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')

Step: 87
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS', 'j']
Tokens: [('-SINGLELETTER-', 'j'), ('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: j
Current token: j

Step: 88
Stack: ['-START-', 'DOTHOSTNAME', 'MOREXALPHAS']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: MOREXALPHAS
Current token: ?
Applying rule 36: ['ε']

Step: 89
Stack: ['-START-', 'DOTHOSTNAME', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 89: DOTHOSTNAME
Applying rule 22: ['ε']

Step: 90
Stack: ['-START-', 'ε']
Tokens: [('-SYMBOL-', '?'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'j'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'c'), ('-SINGLELETTER-', 't'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'H'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'W'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'l'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'A'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'D'), ('-SINGLELETTER-', 'b'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'd'), ('-SINGLELETTER-', 'y'), ('-SYMBOL-', '+'), ('-SINGLELETTER-', 'L'), ('-SINGLELETTER-', 'o'), ('-SINGLELETTER-', 'r'), ('-SINGLELETTER-', 'e'), ('-SINGLELETTER-', 'm'), ('-SINGLELETTER-', 'P'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'R'), ('-SINGLELETTER-', 'C'), ('-SINGLELETTER-', 'E'), ('-SINGLELETTER-', 'N'), ('-SINGLELETTER-', 'T'), ('-SINGLEDIGIT-', '2'), ('-SINGLEDIGIT-', '0'), ('-SINGLELETTER-', 'I'), ('-SINGLELETTER-', 'p'), ('-SINGLELETTER-', 's'), ('-SINGLELETTER-', 'u'), ('-SINGLELETTER-', 'm')]
Current state: ε
Current token: ?
Epsilon detected, skipping...
Current state 90: -START-

Error - tokens left

These tokens were accepted before the error:
mailto::cyprich@smrecek.sj
Original input URL:
mailto::cyprich@smrecek.sj?subject+HelloPERCENT20WorldANDbody+LoremPERCENT20Ipsum
PS H:\Môj disk\5 SJ\5 SJ Zadania\7.5 - Projekt\Solution> 
