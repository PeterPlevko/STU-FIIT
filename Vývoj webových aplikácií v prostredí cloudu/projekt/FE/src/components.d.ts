/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Ambulance, MedicalAppointment } from "./api";
export { Ambulance, MedicalAppointment } from "./api";
export namespace Components {
    interface PprerkoAmbulanceEditor {
        "apiUri": string;
        "basePath": string;
        "entryId": string;
    }
    interface PprerkoAmbulanceList {
        "apiUri": string;
        "selectedEntryId": string;
    }
    interface PprerkoHomePage {
        "ambulance": string;
        "apiUri": string;
        "basePath": string;
    }
    interface PprerkoMedicalAppointmentEditor {
        "apiUri": string;
        "basePath": string;
        "entryId": string;
    }
    interface PprerkoMedicalAppointmentList {
        "apiUri": string;
        "selectedEntryId": string;
    }
}
export interface PprerkoAmbulanceEditorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPprerkoAmbulanceEditorElement;
}
export interface PprerkoAmbulanceListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPprerkoAmbulanceListElement;
}
export interface PprerkoMedicalAppointmentEditorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPprerkoMedicalAppointmentEditorElement;
}
export interface PprerkoMedicalAppointmentListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPprerkoMedicalAppointmentListElement;
}
declare global {
    interface HTMLPprerkoAmbulanceEditorElement extends Components.PprerkoAmbulanceEditor, HTMLStencilElement {
    }
    var HTMLPprerkoAmbulanceEditorElement: {
        prototype: HTMLPprerkoAmbulanceEditorElement;
        new (): HTMLPprerkoAmbulanceEditorElement;
    };
    interface HTMLPprerkoAmbulanceListElement extends Components.PprerkoAmbulanceList, HTMLStencilElement {
    }
    var HTMLPprerkoAmbulanceListElement: {
        prototype: HTMLPprerkoAmbulanceListElement;
        new (): HTMLPprerkoAmbulanceListElement;
    };
    interface HTMLPprerkoHomePageElement extends Components.PprerkoHomePage, HTMLStencilElement {
    }
    var HTMLPprerkoHomePageElement: {
        prototype: HTMLPprerkoHomePageElement;
        new (): HTMLPprerkoHomePageElement;
    };
    interface HTMLPprerkoMedicalAppointmentEditorElement extends Components.PprerkoMedicalAppointmentEditor, HTMLStencilElement {
    }
    var HTMLPprerkoMedicalAppointmentEditorElement: {
        prototype: HTMLPprerkoMedicalAppointmentEditorElement;
        new (): HTMLPprerkoMedicalAppointmentEditorElement;
    };
    interface HTMLPprerkoMedicalAppointmentListElement extends Components.PprerkoMedicalAppointmentList, HTMLStencilElement {
    }
    var HTMLPprerkoMedicalAppointmentListElement: {
        prototype: HTMLPprerkoMedicalAppointmentListElement;
        new (): HTMLPprerkoMedicalAppointmentListElement;
    };
    interface HTMLElementTagNameMap {
        "pprerko-ambulance-editor": HTMLPprerkoAmbulanceEditorElement;
        "pprerko-ambulance-list": HTMLPprerkoAmbulanceListElement;
        "pprerko-home-page": HTMLPprerkoHomePageElement;
        "pprerko-medical-appointment-editor": HTMLPprerkoMedicalAppointmentEditorElement;
        "pprerko-medical-appointment-list": HTMLPprerkoMedicalAppointmentListElement;
    }
}
declare namespace LocalJSX {
    interface PprerkoAmbulanceEditor {
        "apiUri"?: string;
        "basePath"?: string;
        "entryId"?: string;
        "onAmbulanceChange"?: (event: PprerkoAmbulanceEditorCustomEvent<Ambulance>) => void;
        "onCanceled"?: (event: PprerkoAmbulanceEditorCustomEvent<Ambulance>) => void;
        "onDeleted"?: (event: PprerkoAmbulanceEditorCustomEvent<Ambulance>) => void;
    }
    interface PprerkoAmbulanceList {
        "apiUri"?: string;
        "onAmbulanceSelected"?: (event: PprerkoAmbulanceListCustomEvent<string>) => void;
        "selectedEntryId"?: string;
    }
    interface PprerkoHomePage {
        "ambulance"?: string;
        "apiUri"?: string;
        "basePath"?: string;
    }
    interface PprerkoMedicalAppointmentEditor {
        "apiUri"?: string;
        "basePath"?: string;
        "entryId"?: string;
        "onCanceled"?: (event: PprerkoMedicalAppointmentEditorCustomEvent<MedicalAppointment>) => void;
        "onDeleted"?: (event: PprerkoMedicalAppointmentEditorCustomEvent<MedicalAppointment>) => void;
        "onMedicalAppointmentChange"?: (event: PprerkoMedicalAppointmentEditorCustomEvent<MedicalAppointment>) => void;
    }
    interface PprerkoMedicalAppointmentList {
        "apiUri"?: string;
        "onMedicalAppointmentSelected"?: (event: PprerkoMedicalAppointmentListCustomEvent<string>) => void;
        "selectedEntryId"?: string;
    }
    interface IntrinsicElements {
        "pprerko-ambulance-editor": PprerkoAmbulanceEditor;
        "pprerko-ambulance-list": PprerkoAmbulanceList;
        "pprerko-home-page": PprerkoHomePage;
        "pprerko-medical-appointment-editor": PprerkoMedicalAppointmentEditor;
        "pprerko-medical-appointment-list": PprerkoMedicalAppointmentList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "pprerko-ambulance-editor": LocalJSX.PprerkoAmbulanceEditor & JSXBase.HTMLAttributes<HTMLPprerkoAmbulanceEditorElement>;
            "pprerko-ambulance-list": LocalJSX.PprerkoAmbulanceList & JSXBase.HTMLAttributes<HTMLPprerkoAmbulanceListElement>;
            "pprerko-home-page": LocalJSX.PprerkoHomePage & JSXBase.HTMLAttributes<HTMLPprerkoHomePageElement>;
            "pprerko-medical-appointment-editor": LocalJSX.PprerkoMedicalAppointmentEditor & JSXBase.HTMLAttributes<HTMLPprerkoMedicalAppointmentEditorElement>;
            "pprerko-medical-appointment-list": LocalJSX.PprerkoMedicalAppointmentList & JSXBase.HTMLAttributes<HTMLPprerkoMedicalAppointmentListElement>;
        }
    }
}
