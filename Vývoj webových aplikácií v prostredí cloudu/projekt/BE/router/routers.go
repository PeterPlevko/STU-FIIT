/* 
 * Projekt Api
 *
 * Projekt management
 *
 * API version: 1.0.0
 * Contact: aa@bb.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package router 

import (
	"net/http"
	restapi "projekt-backend/rest-api"
	"time"

	"github.com/gin-gonic/gin"
	cors "github.com/itsjamie/gin-cors"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()

	corsConfig := cors.Config{
		Origins:         "*",
		Methods:         "GET, PUT, POST, DELETE, PATCH",
		RequestHeaders:  "Origin, Authorization, Content-Type",
		ExposedHeaders:  "",
		MaxAge:          12 * time.Hour,
		Credentials:     false,
		ValidateHeaders: false,
	}
	router.Use(cors.Middleware(corsConfig))

	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/api/",
		Index,
	},

	{
		"CreateAmbulance",
		http.MethodPost,
		"/api/ambulances/",
		restapi.CreateAmbulance,
	},

	{
		"DeleteAmbulance",
		http.MethodDelete,
		"/api/ambulances/:ambulanceId",
		restapi.DeleteAmbulance,
	},

	{
		"GetAmbulance",
		http.MethodGet,
		"/api/ambulances/:ambulanceId",
		restapi.GetAmbulance,
	},

	{
		"GetAmbulanceEntries",
		http.MethodGet,
		"/api/ambulances/",
		restapi.GetAmbulanceEntries,
	},

	{
		"UpdateAmbulance",
		http.MethodPut,
		"/api/ambulances/:ambulanceId",
		restapi.UpdateAmbulance,
	},

	{
		"CreateAppointment",
		http.MethodPost,
		"/api/appointments/",
		restapi.CreateAppointment,
	},

	{
		"DeleteAppointment",
		http.MethodDelete,
		"/api/appointments/:appointmentId",
		restapi.DeleteAppointment,
	},

	{
		"GetAppointment",
		http.MethodGet,
		"/api/appointments/:appointmentId",
		restapi.GetAppointment,
	},

	{
		"GetAppointmentEntries",
		http.MethodGet,
		"/api/appointments/",
		restapi.GetAppointmentEntries,
	},

	{
		"UpdateAppointment",
		http.MethodPut,
		"/api/appointments/:appointmentId",
		restapi.UpdateAppointment,
	},
}
